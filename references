function rot13(str) { // LBH QVQ VG!
  
  return str.split('').map(function (e, index) {
      return new RegExp(/[A-Z]/).test(e) ? (new RegExp(/[A-Z]/).test(String.fromCharCode(str.charCodeAt(index) + 13)) ? (String.fromCharCode(str.charCodeAt(index) + 13)) : (String.fromCharCode(str.charCodeAt(index) - 13))) :
      e;
  }).join('');
}



function convertToRoman(num) {
  let numArray =  [ // Where all 1x numbers are base
                    [1000,'M'],
                    [900,'CM'],
                    [500,'D'],
                    [400,'CD'],
                    [100,'C'],
                    [90,'XC'],
                    [50,'L'],
                    [40,'XL'],
                    [10,'X'],
                    [9,'IX'],
                    [5,'V'],
                    [4,'IV'],
                    [1,'I']
                  ];
  var romanNum = '';
  let currentRoman = 0;
  while(num > 0) {
    let wholeRoman = Math.floor(num / numArray[currentRoman][0]);
    
    for(let i=0;i<wholeRoman;i++) {
      romanNum += numArray[currentRoman][1];
    }
    if(wholeRoman > 0) {
      num = num - (wholeRoman * numArray[currentRoman][0]);
    }
    currentRoman += 1;
  }
 
  return romanNum;
}

convertToRoman(798);






const cUnit = {
  'PENNY': 0.01,
  'NICKEL': 0.05,
  'DIME': 0.1,
  'QUARTER': 0.25,
  'ONE': 1,
  'FIVE': 5,
  'TEN': 10,
  'TWENTY': 20,
  'ONE HUNDRED': 100,
}; // C-Uniiiiiiit!!

function checkCashRegister(price, cash, cid) {
  var change;
  var fullCid = [...cid];
  if (cid.length === 0) { // No dosh left, escape!
    if (price === 0) { // We did it!
      return {status: 'CLOSED', change: []};
    }
    if (price !== 0) { // We didn't do it!
      return {status: 'INSUFFICIENT_FUNDS', change: []};
    }
  }
  let currentcy = cid.pop();
  let currentChange = cash > 0 ? cash - price : price;
  let currentcyAmount = Math.floor(currentChange / cUnit[currentcy[0]]);
  // Check the cash in the slot
  let whatWeNeed = (currentcyAmount * cUnit[currentcy[0]])
  if (whatWeNeed > currentcy[1]) {
    whatWeNeed = currentcy[1];
  }
  let currentReg = checkCashRegister(Math.round((currentChange - whatWeNeed) * 100) / 100, 0, cid);
  if (currentcyAmount > 0) {
    currentReg.change.unshift([currentcy[0], whatWeNeed]);
  }

  if (currentcy[1] - whatWeNeed > 0 && currentReg.status !== 'INSUFFICIENT_FUNDS') {
    currentReg.status = 'OPEN';
  }
  // If not open, then return register
  if (currentcy[0] === 'ONE HUNDRED') {
    if (currentReg.status === 'CLOSED') {
      currentReg.change = fullCid;
    }
    if (currentReg.status === 'INSUFFICIENT_FUNDS') {
      currentReg.change = [];
    }
  }
  
  return currentReg; 
  // Here is your change, ma'am.
}

// Example cash-in-drawer array:
// [["PENNY", 1.01],
// ["NICKEL", 2.05],
// ["DIME", 3.1],
// ["QUARTER", 4.25],
// ["ONE", 90],
// ["FIVE", 55],
// ["TEN", 20],
// ["TWENTY", 60],
// ["ONE HUNDRED", 100]]

checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]);